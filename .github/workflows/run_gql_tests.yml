name: Run Strobes GraphQL Tests

on:
  pull_request:
    branches:
      - main

jobs:
    build-and-run-unit-tests:
        name: Run GQL Tests
        runs-on: ubuntu-latest
        steps:
            - name: strobes-gql-client Tests Start Slack Notification
              uses: ravsamhq/notify-slack-action@v2
              with:
                  status: warnings
                  token: ${{ secrets.GITHUB_TOKEN }}
                  notification_title: 'GQL Unit Tests started in <{repo_url}|{repo}>.'
                  message_format: "Workflow: *{workflow}* \t Repo:<{repo_url}|{repo}>"
                  notify_when: 'warnings'
                  footer: 'Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>'
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.9'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Run tests and capture output
              id: run_tests
              env:
                  STROBES_API_TOKEN: ${{ secrets.STROBES_API_TOKEN }}
                  STROBES_ORGANIZATION_ID: ${{ secrets.STROBES_ORGANIZATION_ID }}
              run: |
                  python test.py 2>&1 | tee test_output.txt
                  echo "exit_code=$?" >> $GITHUB_OUTPUT

            - name: Comment test results on PR
              uses: actions/github-script@v7
              if: always()
              with:
                  script: |
                      const fs = require('fs');
                      const testOutput = fs.readFileSync('test_output.txt', 'utf8');
                      const exitCode = '${{ steps.run_tests.outputs.exit_code }}';
                      
                      // Extract test summary and detailed results from output
                      const lines = testOutput.split('\n');
                      const summaryStart = lines.findIndex(line => line.includes('Test Summary'));
                      const passedStart = lines.findIndex(line => line.includes('‚úÖ Passed Tests:'));
                      const failedStart = lines.findIndex(line => line.includes('‚ùå Failed Tests:'));
                      
                      let summary = '';
                      
                      // Extract Test Summary
                      if (summaryStart !== -1) {
                          const nextSectionStart = Math.min(
                              passedStart !== -1 ? passedStart : Infinity,
                              failedStart !== -1 ? failedStart : Infinity
                          );
                          const summaryEnd = nextSectionStart !== Infinity ? nextSectionStart : lines.length;
                          const summaryLines = lines.slice(summaryStart, summaryEnd);
                          summary = summaryLines.join('\n');
                      }                      
                      
                      const status = exitCode === '0' ? '‚úÖ' : '‚ùå';
                      const statusText = exitCode === '0' ? 'PASSED' : 'FAILED';
                      
                      const comment = `## üß™ Test Results ${status}
                      
                      **Status:** ${statusText}
                      
                      **Test Summary:**
                      \`\`\`
                      ${summary || 'No summary available'}
                      \`\`\`
                      
                      ---
                      *This comment was automatically generated by GitHub Actions*`;
                      
                      github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: comment
                      });
            